#!/usr/bin/env python3
import docker
import time
import socket

NET='testtechnique_redis'
netName="redis_slave_of_{}".format(socket.gethostname())

def iPsOfRedisMasterContainer(redis_containers):
    net=[ container.attrs['NetworkSettings']['Networks'][NET] for container in redis_containers]
    return sorted([ip['IPAddress'] for ip in net])

def createNetwork(netName):
    if not client.networks.get(netName):
        ipam_pool=docker.types.IPAMPool(
            subnet='10.1.{}.0/24'.format(ipID),
            gateway='10.1.{}.254'.format(ipID)
        )

        ipam_config = docker.types.IPAMConfig(pool_configs=[ipam_pool])
        client.networks.create(netName, driver="bridge", ipam=ipam_config)


# FIND CLUSTER REDIS CONTAINERS IP LIST
client = docker.from_env()
findContainerByName=lambda name: [client.containers.get(str(c.name)) for c in client.containers.list() if name in c.name]

masters=iPsOfRedisMasterContainer(findContainerByName('redis'))
current=str(socket.gethostname())
current=client.containers.get(current)
current=iPsOfRedisMasterContainer([current]) 

current=current[0] if len(current) > 0 else ''
ipID=masters.index(current)

createNetwork(netName)
client.containers.run('redis:6.0-alpine3.14',
    network=netName, name=netName,
    entrypoint="redis-server --port 6380 --slaveof {} 6379".format(current)
)